# Create an OSEv3 group that contains the master, nodes, etcd, and lb groups.
# The lb group lets Ansible configure HAProxy as the load balancing solution.
# Comment lb out if your load balancer is pre-configured.
[OSEv3:children]
masters
nodes
etcd
lb
glusterfs
# Set variables common for all OSEv3 hosts
[OSEv3:vars]
deployment_type=openshift-enterprise
ansible_ssh_user=cloud-user
ansible_become=True
openshift_disable_check=disk_availability,docker_storage,memory_availability,package_availability,docker_image_availability
dynamic_volumes_check=False
enable_excluders=false
containerized=true
openshift_release=v3.9
openshift_image_tag=v3.9
openshift_repos_enable_testing=True
openshift_storage_glusterfs_namespace=app-storage
openshift_storage_glusterfs_storageclass=true
openshift_storageclass_default=false
openshift_storage_glusterfs_storageclass_default=True
openshift_storage_glusterfs_block_deploy=false
openshift_metrics_install_metrics=true
#openshift_metrics_storage_access_modes=['ReadWriteOnce']
openshift_metrics_storage_volume_name=metrics
openshift_metrics_storage_volume_size=10Gi
# Uncomment the following to enable htpasswd authentication; defaults to
# DenyAllPasswordIdentityProvider.
openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider', 'filename': '/etc/origin/master/htpasswd'}]
# Native high availbility cluster method with optional load balancer.
# If no lb group is defined installer assumes that a load balancer has
# been preconfigured. For installation the value of
# openshift_master_cluster_hostname must resolve to the load balancer
# or to one or all of the masters defined in the inventory if no load
# balancer is present.
openshift_master_cluster_method=native
openshift_master_cluster_hostname=ocp.rhsummits.local
openshift_master_cluster_public_hostname=ocp.rhsummits.local
openshift_router_selector="region=master"
openshift_registry_selector="region=master"
os_sdn_network_plugin_name='redhat/openshift-ovs-multitenant'
ansible_service_broker_registry_whitelist=['.*-apb$']
openshift_hosted_etcd_storage_kind=dynamic
openshift_hosted_etcd_storage_volume_name=etcd-vol
#openshift_hosted_etcd_storage_access_modes=["ReadWriteOnce"]
openshift_hosted_etcd_storage_volume_size=1G
openshift_hosted_etcd_storage_labels={'storage': 'etcd'}
openshift_hosted_registry_storage_kind=glusterfs
openshift_hosted_registry_storage_volume_size=10Gi
# apply updated node defaults
openshift_node_kubelet_args={'pods-per-core': ['10'], 'max-pods': ['250'], 'image-gc-high-threshold': ['90'], 'image-gc-low-threshold': ['80']}
# override the default controller lease ttl
#osm_controller_lease_ttl=30
# enable ntp on masters to ensure proper failover
openshift_clock_enabled=true
openshift_master_default_subdomain=apps.rhsummits.local
openshift_hosted_infra_selector="region=master"
#[nfs]
#master01.rhsummits.local
# host group for masters
[masters]
master01.rhsummits.local
master02.rhsummits.local
master03.rhsummits.local
# host group for etcd
[etcd]
master01.rhsummits.local
master02.rhsummits.local
master03.rhsummits.local
[lb]
[glusterfs]
master01.rhsummits.local glusterfs_devices='[ "/dev/vdc" ]'
master02.rhsummits.local glusterfs_devices='[ "/dev/vdc" ]'
master03.rhsummits.local glusterfs_devices='[ "/dev/vdc" ]'
# host group for nodes, includes region info
[nodes]
master01.rhsummits.local openshift_node_labels="{'region': 'master', 'zone': 'east'}"
master02.rhsummits.local openshift_node_labels="{'region': 'master', 'zone': 'east'}"
master03.rhsummits.local openshift_node_labels="{'region': 'master', 'zone': 'east'}"
# Create an OSEv3 group that contains the master, nodes, etcd, and lb groups.
# The lb group lets Ansible configure HAProxy as the load balancing solution.
# Comment lb out if your load balancer is pre-configured.
[OSEv3:children]
masters
nodes
etcd
lb
glusterfs
# Set variables common for all OSEv3 hosts
[OSEv3:vars]
deployment_type=openshift-enterprise
ansible_ssh_user=cloud-user
ansible_become=True
openshift_disable_check=disk_availability,docker_storage,memory_availability,package_availability,docker_image_availability
enable_excluders=false
containerized=true
openshift_release=v3.9
openshift_image_tag=v3.9
openshift_repos_enable_testing=True
openshift_storage_glusterfs_namespace=app-storage
openshift_storage_glusterfs_storageclass=true
openshift_storageclass_default=true
openshift_storage_glusterfs_block_deploy=false
openshift_metrics_install_metrics=true
openshift_metrics_storage_kind=dynamic
openshift_metrics_cassanda_pvc_storage_class_name=glusterfs-storage
#openshift_metrics_storage_access_modes=['ReadWriteOnce']
openshift_metrics_storage_volume_name=metrics
openshift_metrics_storage_volume_size=10Gi
# Uncomment the following to enable htpasswd authentication; defaults to
# DenyAllPasswordIdentityProvider.
openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider', 'filename': '/etc/origin/master/htpasswd'}]
# Native high availbility cluster method with optional load balancer.
# If no lb group is defined installer assumes that a load balancer has
# been preconfigured. For installation the value of
# openshift_master_cluster_hostname must resolve to the load balancer
# or to one or all of the masters defined in the inventory if no load
# balancer is present.
openshift_master_cluster_method=native
openshift_master_cluster_hostname=master01.rhsummits.local
openshift_master_cluster_public_hostname=master01.rhsummits.local
openshift_router_selector="region=master"
openshift_registry_selector="region=master"
os_sdn_network_plugin_name='redhat/openshift-ovs-multitenant'
ansible_service_broker_registry_whitelist=['.*-apb$']
openshift_hosted_etcd_storage_kind=glusterfs
openshift_hosted_etcd_storage_volume_name=etcd-vol
#openshift_hosted_etcd_storage_access_modes=["ReadWriteOnce"]
openshift_hosted_etcd_storage_volume_size=1G
openshift_hosted_etcd_storage_labels={'storage': 'etcd'}
openshift_hosted_registry_storage_kind=glusterfs
openshift_hosted_registry_storage_volume_size=10Gi
# apply updated node defaults
openshift_node_kubelet_args={'pods-per-core': ['10'], 'max-pods': ['250'], 'image-gc-high-threshold': ['90'], 'image-gc-low-threshold': ['80']}
# override the default controller lease ttl
#osm_controller_lease_ttl=30
# enable ntp on masters to ensure proper failover
openshift_clock_enabled=true
openshift_master_default_subdomain=apps.rhsummits.local
openshift_hosted_infra_selector="region=master"
#[nfs]
#master01.rhsummits.local
# host group for masters
[masters]
master01.rhsummits.local
master02.rhsummits.local
master03.rhsummits.local
# host group for etcd
[etcd]
master01.rhsummits.local
master02.rhsummits.local
master03.rhsummits.local
[lb]
[glusterfs]
master01.rhsummits.local glusterfs_devices='[ "/dev/vdc" ]'
master02.rhsummits.local glusterfs_devices='[ "/dev/vdc" ]'
master03.rhsummits.local glusterfs_devices='[ "/dev/vdc" ]'
# host group for nodes, includes region info
[nodes]
master01.rhsummits.local openshift_node_labels="{'region': 'master', 'zone': 'east'}"
master02.rhsummits.local openshift_node_labels="{'region': 'master', 'zone': 'east'}"
master03.rhsummits.local openshift_node_labels="{'region': 'master', 'zone': 'east'}"
